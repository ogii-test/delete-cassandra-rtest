# Copyright 2020 DataStax, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
jobs:
  ccm-repair-tests:
    machine:
      image: ubuntu-2004:2023.04.2
    resource_class: xlarge
    parameters:
      repair-type:
        type: string
    environment:
      REPAIR_TYPE: << parameters.repair-type >>
      LOCAL_JMX: "no"
      MEDUSA_BRANCH: "master"
    steps:
      - checkout
      - run:
          name: Install System Dependencies
          command: |
              set -x
              sudo apt-get update -qq
              sudo apt-get install -y libjna-java python3-dev python3-pip libyaml-dev
              sudo pip3 install pyYaml
              curl -sL https://github.com/shyiko/jabba/raw/master/install.sh | bash && . ~/.jabba/jabba.sh
              . ~/.jabba/jabba.sh && jabba install adopt@1.8.0-272
              . ~/.jabba/jabba.sh && jabba alias default adopt@1.8.0-272
              . ~/.jabba/jabba.sh && sudo update-alternatives --install /usr/bin/java java ${JAVA_HOME%*/}/bin/java 20000
              . ~/.jabba/jabba.sh && sudo update-alternatives --install /usr/bin/javac javac ${JAVA_HOME%*/}/bin/javac 20000
              sudo pip3 install git+https://github.com/riptano/ccm

      - restore_cache:
            keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: |
          TESTFILES=src/test/resources/rtest/cluster_access.feature
          echo "export TESTFILES=${TESTFILES}" >> "$BASH_ENV"

      - run:
          name: Run CCM based tests
          command: |
            #TESTFILES="sr/test/resources/rtest/cluster_access.feature"
            eval mvn test -Dcucumber.features='"$TESTFILES"'
            # -Dcucumber.filter.tags='"@DryRun and @Full"'
workflows:
  version: 2.1
  repair_qa_push:
    jobs:
     # - build
      - ccm-repair-tests:
          matrix:
            parameters:
              repair-type: ["Full"]
